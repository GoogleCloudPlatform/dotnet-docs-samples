// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Resources/customer_record.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from Resources/customer_record.proto</summary>
public static partial class CustomerRecordReflection {

  #region Descriptor
  /// <summary>File descriptor for Resources/customer_record.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static CustomerRecordReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Ch9SZXNvdXJjZXMvY3VzdG9tZXJfcmVjb3JkLnByb3RvIkAKDkN1c3RvbWVy",
          "UmVjb3JkEhUKDWN1c3RvbWVyX25hbWUYASABKAkSFwoPY3VzdG9tZXJfbnVt",
          "YmVyGAIgAigD"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::CustomerRecord), global::CustomerRecord.Parser, new[]{ "CustomerName", "CustomerNumber" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
/// <summary>
/// Define a message type representing the rows in your table. The message
/// cannot contain fields which are not present in the table.
/// </summary>
public sealed partial class CustomerRecord : pb::IMessage<CustomerRecord> {
  private static readonly pb::MessageParser<CustomerRecord> _parser = new pb::MessageParser<CustomerRecord>(() => new CustomerRecord());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CustomerRecord> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CustomerRecordReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CustomerRecord() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CustomerRecord(CustomerRecord other) : this() {
    _hasBits0 = other._hasBits0;
    customerName_ = other.customerName_;
    customerNumber_ = other.customerNumber_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CustomerRecord Clone() {
    return new CustomerRecord(this);
  }

  /// <summary>Field number for the "customer_name" field.</summary>
  public const int CustomerNameFieldNumber = 1;
  private readonly static string CustomerNameDefaultValue = "";

  private string customerName_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CustomerName {
    get { return customerName_ ?? CustomerNameDefaultValue; }
    set {
      customerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "customer_name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool HasCustomerName {
    get { return customerName_ != null; }
  }
  /// <summary>Clears the value of the "customer_name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void ClearCustomerName() {
    customerName_ = null;
  }

  /// <summary>Field number for the "customer_number" field.</summary>
  public const int CustomerNumberFieldNumber = 2;
  private readonly static long CustomerNumberDefaultValue = 0L;

  private long customerNumber_;
  /// <summary>
  /// Use the required keyword for client-side validation of required fields.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long CustomerNumber {
    get { if ((_hasBits0 & 1) != 0) { return customerNumber_; } else { return CustomerNumberDefaultValue; } }
    set {
      _hasBits0 |= 1;
      customerNumber_ = value;
    }
  }
  /// <summary>Gets whether the "customer_number" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool HasCustomerNumber {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "customer_number" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void ClearCustomerNumber() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CustomerRecord);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CustomerRecord other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CustomerName != other.CustomerName) return false;
    if (CustomerNumber != other.CustomerNumber) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (HasCustomerName) hash ^= CustomerName.GetHashCode();
    if (HasCustomerNumber) hash ^= CustomerNumber.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (HasCustomerName) {
      output.WriteRawTag(10);
      output.WriteString(CustomerName);
    }
    if (HasCustomerNumber) {
      output.WriteRawTag(16);
      output.WriteInt64(CustomerNumber);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (HasCustomerName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CustomerName);
    }
    if (HasCustomerNumber) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(CustomerNumber);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CustomerRecord other) {
    if (other == null) {
      return;
    }
    if (other.HasCustomerName) {
      CustomerName = other.CustomerName;
    }
    if (other.HasCustomerNumber) {
      CustomerNumber = other.CustomerNumber;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          CustomerName = input.ReadString();
          break;
        }
        case 16: {
          CustomerNumber = input.ReadInt64();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
